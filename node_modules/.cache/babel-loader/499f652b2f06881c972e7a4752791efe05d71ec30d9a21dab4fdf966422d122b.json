{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blackhat\\\\Desktop\\\\littlelemonv2\\\\littlelemonv2\\\\src\\\\components\\\\pages\\\\Bookings\\\\BookingForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport FormField from './FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingForm = _ref => {\n  _s();\n  let {\n    availableTimes,\n    dispatchOnDateChange,\n    submitData\n  } = _ref;\n  const minimumDate = new Date().toISOString().split('T')[0];\n  const defaultTime = availableTimes[0];\n  const minimumNumberOfGuests = 1;\n  const maximumNumberOfGuests = 10;\n  const occasions = ['Birthday', 'Anniversary', 'Casual', 'Date'];\n  const invalidDateErrorMessage = 'Please choose a valid date';\n  const invalidTimeErrorMessage = 'Please choose a valid time';\n  const invalidOccasionErrorMessage = 'Please choose a valid occasion';\n  const invalidNumberOfGuestsErrorMessage = 'Please enter a number between 1 and 10';\n  const [date, setDate] = useState(minimumDate);\n  const [time, setTime] = useState(defaultTime);\n  const [numberOfGuests, setNumberGuests] = useState(minimumNumberOfGuests);\n  const [email, setEmail] = useState(email);\n  const [occasion, setOccasion] = useState(occasions[0]);\n  const isDateValid = () => date !== '';\n  const isTimeValid = () => time !== '';\n  const isNumberOfGuestsValid = () => numberOfGuests !== '';\n  const isOccasionValid = () => occasion !== '';\n  const areAllFieldsValid = () => isDateValid() && isTimeValid() && isNumberOfGuestsValid() && isOccasionValid();\n  const handleDateChange = e => {\n    setDate(e.target.value);\n    dispatchOnDateChange(e.target.value);\n  };\n  const handleTimeChange = e => setTime(e.target.value);\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    submitData({\n      date,\n      time,\n      numberOfGuests,\n      occasion\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Date\",\n      htmlFor: \"booking-date\",\n      hasError: !isDateValid(),\n      errorMessage: invalidDateErrorMessage,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"booking-date\",\n        name: \"booking-date\",\n        min: minimumDate,\n        value: date,\n        required: true,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Time\",\n      htmlFor: \"booking-time\",\n      hasError: !isTimeValid(),\n      errorMessage: invalidTimeErrorMessage,\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"booking-time\",\n        name: \"booking-time\",\n        value: time,\n        required: true,\n        onChange: handleTimeChange,\n        children: availableTimes.map(times => /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-testid\": \"booking-time-option\",\n          children: times\n        }, times, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Number of guests\",\n      htmlFor: \"booking-number-guests\",\n      hasError: !isNumberOfGuestsValid(),\n      errorMessage: invalidNumberOfGuestsErrorMessage,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"booking-number-guests\",\n        name: \"booking-number-guests\",\n        value: numberOfGuests,\n        min: minimumNumberOfGuests,\n        max: maximumNumberOfGuests,\n        required: true,\n        onChange: e => setNumberGuests(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Occasion\",\n      htmlFor: \"booking-occasion\",\n      hasError: !isOccasionValid(),\n      errorMessage: invalidOccasionErrorMessage,\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"booking-occasion\",\n        name: \"booking-occasion\",\n        value: occasion,\n        required: true,\n        onChange: e => setOccasion(e.target.value),\n        children: occasions.map(occasion => /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-testid\": \"booking-occasion-option\",\n          children: occasion\n        }, occasion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-primary\",\n      type: \"submit\",\n      disabled: !areAllFieldsValid(),\n      children: \"Make your reservation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingForm, \"8o2Np4fDnkqXUD/YYPY/y3uJ/mc=\");\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["useState","FormField","jsxDEV","_jsxDEV","BookingForm","_ref","_s","availableTimes","dispatchOnDateChange","submitData","minimumDate","Date","toISOString","split","defaultTime","minimumNumberOfGuests","maximumNumberOfGuests","occasions","invalidDateErrorMessage","invalidTimeErrorMessage","invalidOccasionErrorMessage","invalidNumberOfGuestsErrorMessage","date","setDate","time","setTime","numberOfGuests","setNumberGuests","email","setEmail","occasion","setOccasion","isDateValid","isTimeValid","isNumberOfGuestsValid","isOccasionValid","areAllFieldsValid","handleDateChange","e","target","value","handleTimeChange","handleFormSubmit","preventDefault","onSubmit","children","label","htmlFor","hasError","errorMessage","type","id","name","min","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","times","max","className","disabled","_c","$RefreshReg$"],"sources":["C:/Users/blackhat/Desktop/littlelemonv2/littlelemonv2/src/components/pages/Bookings/BookingForm.js"],"sourcesContent":["import { useState } from 'react';\nimport FormField from './FormField';\n\nconst BookingForm = ({\n  availableTimes,\n  dispatchOnDateChange,\n  submitData\n}) => {\n  const minimumDate = new Date().toISOString().split('T')[0];\n  const defaultTime = availableTimes[0];\n  const minimumNumberOfGuests = 1;\n  const maximumNumberOfGuests = 10;\n  const occasions = ['Birthday', 'Anniversary', 'Casual', 'Date'];\n  const invalidDateErrorMessage = 'Please choose a valid date';\n  const invalidTimeErrorMessage = 'Please choose a valid time';\n  const invalidOccasionErrorMessage = 'Please choose a valid occasion';\n  const invalidNumberOfGuestsErrorMessage = \n    'Please enter a number between 1 and 10';\n\n  const [date, setDate] = useState(minimumDate);\n  const [time, setTime] = useState(defaultTime);\n  const [\n    numberOfGuests, \n    setNumberGuests\n  ] = useState(minimumNumberOfGuests);\n  const [email, setEmail] = useState(email);\n  const [occasion, setOccasion] = useState(occasions[0]);\n\n  const isDateValid = () => date !== '';\n  const isTimeValid = () => time !== '';\n  const isNumberOfGuestsValid = () => numberOfGuests !== '';\n  const isOccasionValid = () => occasion !== '';\n\n  const areAllFieldsValid = () => \n    isDateValid() \n    && isTimeValid() \n    && isNumberOfGuestsValid() \n    && isOccasionValid();\n  \n  const handleDateChange = e => {\n    setDate(e.target.value);\n    dispatchOnDateChange(e.target.value);\n  };\n\n  const handleTimeChange = e => setTime(e.target.value);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    submitData({ date, time, numberOfGuests, occasion, });\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <FormField \n        label=\"Date\" \n        htmlFor=\"booking-date\" \n        hasError={!isDateValid()} \n        errorMessage={invalidDateErrorMessage}\n      >\n        <input \n          type=\"date\" \n          id=\"booking-date\" \n          name=\"booking-date\" \n          min={minimumDate} \n          value={date} \n          required={true} \n          onChange={handleDateChange}\n        />\n      </FormField>\n      <FormField \n        label=\"Time\" \n        htmlFor=\"booking-time\" \n        hasError={!isTimeValid()} \n        errorMessage={invalidTimeErrorMessage}\n      >\n        <select \n          id=\"booking-time\" \n          name=\"booking-time\" \n          value={time} \n          required={true} \n          onChange={handleTimeChange}\n        >\n          {availableTimes.map(times => \n            <option data-testid=\"booking-time-option\" key={times}>\n              {times}\n            </option>\n          )}\n        </select>\n      </FormField>\n      <FormField \n        label=\"Number of guests\" \n        htmlFor=\"booking-number-guests\" \n        hasError={!isNumberOfGuestsValid()} \n        errorMessage={invalidNumberOfGuestsErrorMessage}\n      >\n        <input \n          type=\"number\" \n          id=\"booking-number-guests\" \n          name=\"booking-number-guests\" \n          value={numberOfGuests} \n          min={minimumNumberOfGuests} \n          max={maximumNumberOfGuests} \n          required={true} \n          onChange={e => setNumberGuests(e.target.value)}\n        />\n      </FormField>\n      <FormField \n        label=\"Occasion\" \n        htmlFor=\"booking-occasion\" \n        hasError={!isOccasionValid()} \n        errorMessage={invalidOccasionErrorMessage}\n      >\n        <select \n          id=\"booking-occasion\" \n          name=\"booking-occasion\" \n          value={occasion} \n          required={true} \n          onChange={e => setOccasion(e.target.value)}\n        >\n          {occasions.map(occasion => \n            <option data-testid=\"booking-occasion-option\" key={occasion}>\n              {occasion}\n            </option>\n          )}\n        </select>\n      </FormField>\n      <button \n        className=\"button-primary\" \n        type=\"submit\" \n        disabled={!areAllFieldsValid()}\n      >\n        Make your reservation\n      </button>\n    </form>\n  );\n};\n\nexport default BookingForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}